#!/bin/groovy

def GIT_URL = "https://github.com/sartura/replica.git"
def GENTOO_MIRRORS = "http://mirror.netcologne.de/gentoo/ http://distfiles.gentoo.org"

loadGlobalLibrary()

pipeline{
  agent{
      label "centos7-docker-aws-1c-2g"
  }
  stages{
    stage("Prepate Env"){
      steps{
        script{
          echo "Clone Sources"
          checkout(
            changelog: false,
            poll: false,
            scm: [$class: 'GitSCM',
                  branches: [[name: "${sha1}"]],
                  doGenerateSubmoduleConfigurations: false,
                  extensions: [],
                  submoduleCfg: [],
                  userRemoteConfigs: [[refspec: '+refs/pull/*:refs/remotes/origin/pr/*', url: GIT_URL]]]
          )
        }
      }
    }
    stage("Run make"){
      environment{
        GO111MODULE = "on"
      }
      steps{
        script{
          echo "Run make"
          sh "sudo setenforce permissive"
          sh "git submodule update --init --recursive --depth 1"
          sh "make GENTOO_MIRRORS=\"${GENTOO_MIRRORS}\" DOCKER_BUILDKIT=1 CTARGET=${env.TUPLE} package_${env.TARGET} "
        }
      }
    }
  }
  //post {
      //always {
          // The default logSettingsFile is "jenkins-log-archives-settings".
          // If this file isn't present, a different value for logSettingsFile
          // will need to be passed to lfInfraShipLogs.
          //lfInfraShipLogs(logSettingsFile = "jenkins-s3-log-ship")
      //}
   //}
}
def loadGlobalLibrary(branch = "*/master") {
    library(identifier: "pipelines@master",
        retriever: legacySCM([
            $class: "GitSCM",
            userRemoteConfigs: [[url: "https://github.com/lfit/releng-pipelines"]],
            branches: [[name: branch]],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[
                $class: "SubmoduleOption",
                recursiveSubmodules: true,
            ]]]
        )
    )
}
