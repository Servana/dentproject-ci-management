---
- import_playbook: ../common-packer/provision/docker.yaml

- hosts: all
  become_user: root
  become_method: sudo
  vars:
    apt_file: /etc/apt/sources.list.d/google-chrome.list
    docker_compose_version: 1.29.2
    glide_checksum: sha256:c403933503ea40308ecfadcff581ff0dc3190c57958808bb9eed016f13f6f32c
    glide_version: v0.13.1
    golang_version: 1.9.1
    npm_version: "6.14.13"

  tasks:
    - name: "Checking for x86_64"
      set_fact:
        host_arch: "amd64"
        golang_checksum: sha256:07d81c6b6b4c2dcf1b5ef7c27aaebd3691cdb40548500941f92b221147c5d9c7
      when: "'x86_64' in ansible_architecture"

    - name: "Checking for aarch64"
      set_fact:
        host_arch: "arm64"
        golang_checksum: sha256:d31ecae36efea5197af271ccce86ccc2baf10d2e04f20d0fb75556ecf0614dad
      when: "'aarch64' in ansible_architecture"

    - name: "Install Docker Compose {{docker_compose_version}}"
      command: curl -o /usr/local/bin/docker-compose -L "https://github.com/docker/compose/releases/download/{{docker_compose_version}}/docker-compose-Linux-x86_64"
      become: true

    - file:
        path: /usr/local/bin/docker-compose
        mode: "+x"
      become: true

    - name: "Install GoLang {{golang_version}}"
      block:
        - name: "Fetch golang {{golang_version}} to /tmp/go{{golang_version}}.linux-{{host_arch}}.tar.gz"
          get_url:
            url: "https://storage.googleapis.com/golang/go{{golang_version}}.linux-{{host_arch}}.tar.gz"
            dest: "/tmp/go{{golang_version}}.linux-{{host_arch}}.tar.gz"
            checksum: "{{golang_checksum}}"
        - name: "Install golang {{golang_version}} to /usr/local"
          unarchive:
            src: "/tmp/go{{golang_version}}.linux-{{host_arch}}.tar.gz"
            dest: /usr/local
            remote_src: true
          become: true
        - name: Create symbolic link to go bin
          file:
            src: "/usr/local/go/bin/go"
            dest: "/usr/bin/go"
            state: link
          become: true

    - name: Install libxml2-utils
      apt:
        name: libxml2-utils
        state: present
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install python-tox and deps
      pip:
        name:
          - tox
          - tox-pyenv
          - virtualenv
          - more-itertools~=5.0.0
          - zipp==1.0.0
        state: present
      become: true

    - apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Update and upgrade apt packages
      apt:
        upgrade: "yes"
        update_cache: yes
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install Python 3.6 and packages
      apt:
        name:
          - python3.6
          - python3.6-dev
          - python3.6-tk
          - libssl-dev
          - libmysqlclient-dev
          - gcc
          - python3-venv
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install Python 3.7
      apt:
        name:
          - python3.7
          - python3.7-dev
          - python3.7-tk
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install Python 3.8
      apt:
        name:
          - python3.8
          - python3.8-dev
          - python3.8-tk
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install Python 3.9
      apt:
        name:
          - python3.9
          - python3.9-dev
          - python3.9-tk
          - python3.9-distutils
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install nodejs-dev libssl1.0-dev dep
      apt:
        name:
          - libssl1.0-dev
        update_cache: yes
        state: fixed
      become: true
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'

    - name: Install nodejs-dev dep for npm
      apt:
        name:
          - nodejs-dev
        update_cache: yes
        state: fixed
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install supporting packages
      apt:
        name:
          - unzip
          - xz-utils
          - libxml-xpath-perl
          - wget
          - make
          - sshuttle
          - netcat
          - libssl-dev
          - libffi-dev
          - xmlstarlet
          - xvfb
          - crudini
          - maven
          - python-ncclient
          - xmlstarlet
          - xvfb
          - crudini
          - maven
          - python-ncclient
        update_cache: yes
        state: fixed
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install npm and addon packages
      apt:
        name:
          - nodejs
          - npm
          - node-gyp
        update_cache: yes
        state: fixed
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Update apt cache
      apt: update_cache=yes
      become: true
      when: ansible_distribution == 'Ubuntu'
